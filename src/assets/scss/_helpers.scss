//	Color Variables
$stone-grey: #2a2d34;
$dark-grey: #67686d;
$medium-grey: #7e7f84;
$light-grey: #767f84;
$extralight-grey: #ededed;
$border-color-grey: #eeeeee;

$primary-red: #f45a40;

$white-color: #fff;

$tabs-background: #f2f1f1;

//	Fonts

@import url('https://fonts.googleapis.com/css?family=PT+Sans');

$font-headline: 'PT Sans', sans-serif;
$font-main: 'Arial', sans-serif;

$border-grey: 1px solid $border-color-grey;
//
//	Bootstrap Variables
//
//== Media queries breakpoints
//
//## Define the breakpoints at which your layout will change, adapting to different screen sizes.

// Extra small screen / phone
//** Deprecated `$screen-xs` as of v3.0.1
$screen-xs:                  480px !default;
//** Deprecated `$screen-xs-min` as of v3.2.0
$screen-xs-min:              $screen-xs !default;
//** Deprecated `$screen-phone` as of v3.0.1
$screen-phone:               $screen-xs-min !default;

// Small screen / tablet
//** Deprecated `$screen-sm` as of v3.0.1
$screen-sm:                  768px !default;
$screen-sm-min:              $screen-sm !default;
//** Deprecated `$screen-tablet` as of v3.0.1
$screen-tablet:              $screen-sm-min !default;

// Medium screen / desktop
//** Deprecated `$screen-md` as of v3.0.1
$screen-md:                  992px !default;
$screen-md-min:              $screen-md !default;
//** Deprecated `$screen-desktop` as of v3.0.1
$screen-desktop:             $screen-md-min !default;

// Large screen / wide desktop
//** Deprecated `$screen-lg` as of v3.0.1
$screen-lg:                  1200px !default;
$screen-lg-min:              $screen-lg !default;
//** Deprecated `$screen-lg-desktop` as of v3.0.1
$screen-lg-desktop:          $screen-lg-min !default;

// So media queries don't overlap when required, provide a maximum
$screen-xs-max:              ($screen-sm-min - 1) !default;
$screen-sm-max:              ($screen-md-min - 1) !default;
$screen-md-max:              ($screen-lg-min - 1) !default;

//	Mixins
//
// Border Mixin

@mixin border ($style: $border-grey,  $sides...){
  @if ($style != "") {
    @if ($sides == "") {
      border: $style;
    } @else {
      @each $side in $sides {
        @if ($side == 'top' or
          $side == 'right' or
          $side == 'bottom' or
          $side == 'left') {
            border-#{$side}: $style;
        }
     	}
  	}
  }
}
// Flexbox Prefix Mixin
@mixin flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}
// Flex Values Mixin
@mixin flex($values) {
  -webkit-box-flex: $values;
  -moz-box-flex:  $values;
  -webkit-flex:  $values;
  -ms-flex:  $values;
  flex:  $values;
}
// Flex Order Mixin
@mixin order($val) {
  -webkit-box-ordinal-group: $val;  
  -moz-box-ordinal-group: $val;     
  -ms-flex-order: $val;     
  -webkit-order: $val;  
  order: $val;
}

